:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/api/classes/Reaper.xml.

.. _class_Reaper:

Reaper
======

**Inherits:** 

.. container:: contribute

	There is currently no description for this class. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +------------+----------------------------------------------------------------------------------------------------------+
   | int        | :ref:`create_process<class_Reaper_method_create_process>` **(** String cmd, PackedStringArray args **)** |
   +------------+----------------------------------------------------------------------------------------------------------+
   | Array      | :ref:`get_children_with_pgid<class_Reaper_method_get_children_with_pgid>` **(** int pid, int pgid **)**  |
   +------------+----------------------------------------------------------------------------------------------------------+
   | int        | :ref:`get_parent_pid<class_Reaper_method_get_parent_pid>` **(** int pid **)**                            |
   +------------+----------------------------------------------------------------------------------------------------------+
   | int        | :ref:`get_pid_group<class_Reaper_method_get_pid_group>` **(** int pid **)**                              |
   +------------+----------------------------------------------------------------------------------------------------------+
   | int        | :ref:`get_pid_property_int<class_Reaper_method_get_pid_property_int>` **(** int pid, String key **)**    |
   +------------+----------------------------------------------------------------------------------------------------------+
   | String     | :ref:`get_pid_state<class_Reaper_method_get_pid_state>` **(** int pid **)**                              |
   +------------+----------------------------------------------------------------------------------------------------------+
   | Dictionary | :ref:`get_pid_status<class_Reaper_method_get_pid_status>` **(** int pid **)**                            |
   +------------+----------------------------------------------------------------------------------------------------------+
   | bool       | :ref:`is_gamescope_pid<class_Reaper_method_is_gamescope_pid>` **(** int pid **)**                        |
   +------------+----------------------------------------------------------------------------------------------------------+
   | Array      | :ref:`pstree<class_Reaper_method_pstree>` **(** int pid **)**                                            |
   +------------+----------------------------------------------------------------------------------------------------------+
   | void       | :ref:`reap<class_Reaper_method_reap>` **(** int pid, :ref:`SIG<enum_Reaper_SIG>` sig **)**               |
   +------------+----------------------------------------------------------------------------------------------------------+
   | Array      | :ref:`to_int_array<class_Reaper_method_to_int_array>` **(** Array arr **)**                              |
   +------------+----------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_Reaper_SIG:

.. rst-class:: classref-enumeration

enum **SIG**:

.. _class_Reaper_constant_KILL:

.. rst-class:: classref-enumeration-constant

:ref:`SIG<enum_Reaper_SIG>` **KILL** = ``9``



.. _class_Reaper_constant_TERM:

.. rst-class:: classref-enumeration-constant

:ref:`SIG<enum_Reaper_SIG>` **TERM** = ``15``



.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Reaper_method_create_process:

.. rst-class:: classref-method

int **create_process** **(** String cmd, PackedStringArray args **)**

Spawn a process with PR_SET_CHILD_SUBREAPER set so child processes will reparent themselves to OpenGamepadUI. Returns the PID of the spawned process.

.. rst-class:: classref-item-separator

----

.. _class_Reaper_method_get_children_with_pgid:

.. rst-class:: classref-method

Array **get_children_with_pgid** **(** int pid, int pgid **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Reaper_method_get_parent_pid:

.. rst-class:: classref-method

int **get_parent_pid** **(** int pid **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Reaper_method_get_pid_group:

.. rst-class:: classref-method

int **get_pid_group** **(** int pid **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Reaper_method_get_pid_property_int:

.. rst-class:: classref-method

int **get_pid_property_int** **(** int pid, String key **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Reaper_method_get_pid_state:

.. rst-class:: classref-method

String **get_pid_state** **(** int pid **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Reaper_method_get_pid_status:

.. rst-class:: classref-method

Dictionary **get_pid_status** **(** int pid **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Reaper_method_is_gamescope_pid:

.. rst-class:: classref-method

bool **is_gamescope_pid** **(** int pid **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Reaper_method_pstree:

.. rst-class:: classref-method

Array **pstree** **(** int pid **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Reaper_method_reap:

.. rst-class:: classref-method

void **reap** **(** int pid, :ref:`SIG<enum_Reaper_SIG>` sig **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Reaper_method_to_int_array:

.. rst-class:: classref-method

Array **to_int_array** **(** Array arr **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
