:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/api/classes/Plugin.xml.

.. _class_Plugin:

Plugin
======

**Inherits:** 

Base class for Plugins

.. rst-class:: classref-introduction-group

Description
-----------

The Plugin class provides an interface and light API for creating plugins. New plugins should inherit from this class and will automatically get added to the scene tree as a child of the :ref:`PluginLoader<class_PluginLoader>` when it is loaded.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-------------------------------------+-------------------------------------------------------+
   | String                              | :ref:`cache<class_Plugin_property_cache>`             |
   +-------------------------------------+-------------------------------------------------------+
   | :ref:`Log.Logger<class_Log.Logger>` | :ref:`logger<class_Plugin_property_logger>`           |
   +-------------------------------------+-------------------------------------------------------+
   | String                              | :ref:`plugin_base<class_Plugin_property_plugin_base>` |
   +-------------------------------------+-------------------------------------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +---------+--------------------------------------------------------------------------------------------------------------------+
   | void    | :ref:`_init<class_Plugin_method__init>` **(** **)**                                                                |
   +---------+--------------------------------------------------------------------------------------------------------------------+
   | void    | :ref:`_ready<class_Plugin_method__ready>` **(** **)**                                                              |
   +---------+--------------------------------------------------------------------------------------------------------------------+
   | void    | :ref:`add_boxart<class_Plugin_method_add_boxart>` **(** :ref:`BoxArtProvider<class_BoxArtProvider>` boxart **)**   |
   +---------+--------------------------------------------------------------------------------------------------------------------+
   | void    | :ref:`add_library<class_Plugin_method_add_library>` **(** :ref:`Library<class_Library>` library **)**              |
   +---------+--------------------------------------------------------------------------------------------------------------------+
   | void    | :ref:`add_store<class_Plugin_method_add_store>` **(** :ref:`Store<class_Store>` store **)**                        |
   +---------+--------------------------------------------------------------------------------------------------------------------+
   | void    | :ref:`add_to_qam<class_Plugin_method_add_to_qam>` **(** Control qam_item, Texture2D icon, Control focus_node **)** |
   +---------+--------------------------------------------------------------------------------------------------------------------+
   | Control | :ref:`get_settings_menu<class_Plugin_method_get_settings_menu>` **(** **)**                                        |
   +---------+--------------------------------------------------------------------------------------------------------------------+
   | void    | :ref:`unload<class_Plugin_method_unload>` **(** **)**                                                              |
   +---------+--------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Constants
---------

.. _class_Plugin_constant_OGUIButton:

.. rst-class:: classref-constant

**OGUIButton** = ``platform-dependent``



.. _class_Plugin_constant_ButtonStateChanger:

.. rst-class:: classref-constant

**ButtonStateChanger** = ``platform-dependent``



.. _class_Plugin_constant_qam_state_machine:

.. rst-class:: classref-constant

**qam_state_machine** = ``platform-dependent``



.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_Plugin_property_cache:

.. rst-class:: classref-property

String **cache**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Plugin_property_logger:

.. rst-class:: classref-property

:ref:`Log.Logger<class_Log.Logger>` **logger**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Plugin_property_plugin_base:

.. rst-class:: classref-property

String **plugin_base**

The base resource directory for a given plugin. This will be set by the :ref:`PluginLoader<class_PluginLoader>` when it is loaded. Useful for loading plugin-specific resources.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Plugin_method__init:

.. rst-class:: classref-method

void **_init** **(** **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Plugin_method__ready:

.. rst-class:: classref-method

void **_ready** **(** **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_Plugin_method_add_boxart:

.. rst-class:: classref-method

void **add_boxart** **(** :ref:`BoxArtProvider<class_BoxArtProvider>` boxart **)**

Adds the given boxart provider as a child of the plugin. A :ref:`BoxArtProvider<class_BoxArtProvider>` node will automatically register itself with the :ref:`BoxArtManager<class_BoxArtManager>` when it enters the scene tree.

.. rst-class:: classref-item-separator

----

.. _class_Plugin_method_add_library:

.. rst-class:: classref-method

void **add_library** **(** :ref:`Library<class_Library>` library **)**

Adds the given library implementation as a child of the plugin. A :ref:`Library<class_Library>` node will automatically register itself with the :ref:`LibraryManager<class_LibraryManager>` when it enters the scene tree.

.. rst-class:: classref-item-separator

----

.. _class_Plugin_method_add_store:

.. rst-class:: classref-method

void **add_store** **(** :ref:`Store<class_Store>` store **)**

Adds the given store implementation as a child of the plugin. A :ref:`Store<class_Store>` node will automatically register itself with the :ref:`StoreManager<class_StoreManager>` when it enters the scene tree.

.. rst-class:: classref-item-separator

----

.. _class_Plugin_method_add_to_qam:

.. rst-class:: classref-method

void **add_to_qam** **(** Control qam_item, Texture2D icon, Control focus_node **)**

Adds the given menu scene to the Quick Access Menu

.. rst-class:: classref-item-separator

----

.. _class_Plugin_method_get_settings_menu:

.. rst-class:: classref-method

Control **get_settings_menu** **(** **)**

To be overridden by plugin implementation. Should return a scene with plugin settings. This scene will be included in the plugin settings menu to let users modify plugin-specific settings.

.. rst-class:: classref-item-separator

----

.. _class_Plugin_method_unload:

.. rst-class:: classref-method

void **unload** **(** **)**

To be overridden by plugin implementation. Should unload changes done by the plugin.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
