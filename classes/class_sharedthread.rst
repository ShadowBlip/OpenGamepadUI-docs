:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/api/classes/SharedThread.xml.

.. _class_SharedThread:

SharedThread
============

**Inherits:** 

**Inherited By:** :ref:`ThreadGroup<class_ThreadGroup>`

Resource that allows nodes to run in a separate thread

.. rst-class:: classref-introduction-group

Description
-----------

NodeThreads can belong to a SharedThread which will run their _thread_process method in the given thread

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-------------------------------------+-----------------------------------------------------------------------+--------------------+
   | int                                 | :ref:`last_time<class_SharedThread_property_last_time>`               |                    |
   +-------------------------------------+-----------------------------------------------------------------------+--------------------+
   | :ref:`Log.Logger<class_Log.Logger>` | :ref:`logger<class_SharedThread_property_logger>`                     |                    |
   +-------------------------------------+-----------------------------------------------------------------------+--------------------+
   | Mutex                               | :ref:`mutex<class_SharedThread_property_mutex>`                       |                    |
   +-------------------------------------+-----------------------------------------------------------------------+--------------------+
   | String                              | :ref:`name<class_SharedThread_property_name>`                         | ``"SharedThread"`` |
   +-------------------------------------+-----------------------------------------------------------------------+--------------------+
   | int                                 | :ref:`niceness<class_SharedThread_property_niceness>`                 | ``0``              |
   +-------------------------------------+-----------------------------------------------------------------------+--------------------+
   | Array                               | :ref:`nodes<class_SharedThread_property_nodes>`                       |                    |
   +-------------------------------------+-----------------------------------------------------------------------+--------------------+
   | Array                               | :ref:`one_shots<class_SharedThread_property_one_shots>`               |                    |
   +-------------------------------------+-----------------------------------------------------------------------+--------------------+
   | Array                               | :ref:`process_funcs<class_SharedThread_property_process_funcs>`       |                    |
   +-------------------------------------+-----------------------------------------------------------------------+--------------------+
   | bool                                | :ref:`running<class_SharedThread_property_running>`                   | ``false``          |
   +-------------------------------------+-----------------------------------------------------------------------+--------------------+
   | Array                               | :ref:`scheduled_funcs<class_SharedThread_property_scheduled_funcs>`   |                    |
   +-------------------------------------+-----------------------------------------------------------------------+--------------------+
   | int                                 | :ref:`target_tick_rate<class_SharedThread_property_target_tick_rate>` | ``60``             |
   +-------------------------------------+-----------------------------------------------------------------------+--------------------+
   | Thread                              | :ref:`thread<class_SharedThread_property_thread>`                     |                    |
   +-------------------------------------+-----------------------------------------------------------------------+--------------------+
   | int                                 | :ref:`tid<class_SharedThread_property_tid>`                           | ``-1``             |
   +-------------------------------------+-----------------------------------------------------------------------+--------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`_async_call<class_SharedThread_method__async_call>` **(** Callable method **)**                                                                              |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`_init<class_SharedThread_method__init>` **(** **)**                                                                                                          |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`_notification<class_SharedThread_method__notification>` **(** int what **)**                                                                                 |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`_process<class_SharedThread_method__process>` **(** float delta **)**                                                                                        |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`_run<class_SharedThread_method__run>` **(** **)**                                                                                                            |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`add_node<class_SharedThread_method_add_node>` **(** :ref:`NodeThread<class_NodeThread>` node **)**                                                           |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`add_process<class_SharedThread_method_add_process>` **(** Callable method **)**                                                                              |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`cancel_scheduled_exec<class_SharedThread_method_cancel_scheduled_exec>` **(** :ref:`SharedThread.ScheduledTask<class_SharedThread.ScheduledTask>` task **)** |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`exec<class_SharedThread_method_exec>` **(** Callable method **)**                                                                                            |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | Array | :ref:`find_scheduled_exec<class_SharedThread_method_find_scheduled_exec>` **(** Callable method **)**                                                              |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | int   | :ref:`get_target_frame_time<class_SharedThread_method_get_target_frame_time>` **(** **)**                                                                          |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`remove_node<class_SharedThread_method_remove_node>` **(** :ref:`NodeThread<class_NodeThread>` node, bool stop_on_empty **)**                                 |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`remove_process<class_SharedThread_method_remove_process>` **(** Callable method **)**                                                                        |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`scheduled_exec<class_SharedThread_method_scheduled_exec>` **(** Callable method, int wait_time_ms **)**                                                      |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | int   | :ref:`set_priority<class_SharedThread_method_set_priority>` **(** int value **)**                                                                                  |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`start<class_SharedThread_method_start>` **(** **)**                                                                                                          |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void  | :ref:`stop<class_SharedThread_method_stop>` **(** **)**                                                                                                            |
   +-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_SharedThread_signal_exec_completed:

.. rst-class:: classref-signal

**exec_completed** **(** Callable method, Variant ret **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Constants
---------

.. _class_SharedThread_constant_watchdog:

.. rst-class:: classref-constant

**watchdog** = ``platform-dependent``



.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_SharedThread_property_last_time:

.. rst-class:: classref-property

int **last_time**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_property_logger:

.. rst-class:: classref-property

:ref:`Log.Logger<class_Log.Logger>` **logger**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_property_mutex:

.. rst-class:: classref-property

Mutex **mutex**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_property_name:

.. rst-class:: classref-property

String **name** = ``"SharedThread"``

Name of the thread group

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_property_niceness:

.. rst-class:: classref-property

int **niceness** = ``0``

Priority (niceness) of the thread

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_property_nodes:

.. rst-class:: classref-property

Array **nodes**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_property_one_shots:

.. rst-class:: classref-property

Array **one_shots**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_property_process_funcs:

.. rst-class:: classref-property

Array **process_funcs**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_property_running:

.. rst-class:: classref-property

bool **running** = ``false``

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_property_scheduled_funcs:

.. rst-class:: classref-property

Array **scheduled_funcs**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_property_target_tick_rate:

.. rst-class:: classref-property

int **target_tick_rate** = ``60``

Target rate to run at in ticks per second

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_property_thread:

.. rst-class:: classref-property

Thread **thread**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_property_tid:

.. rst-class:: classref-property

int **tid** = ``-1``

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_SharedThread_method__async_call:

.. rst-class:: classref-method

void **_async_call** **(** Callable method **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method__init:

.. rst-class:: classref-method

void **_init** **(** **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method__notification:

.. rst-class:: classref-method

void **_notification** **(** int what **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method__process:

.. rst-class:: classref-method

void **_process** **(** float delta **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method__run:

.. rst-class:: classref-method

void **_run** **(** **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method_add_node:

.. rst-class:: classref-method

void **add_node** **(** :ref:`NodeThread<class_NodeThread>` node **)**

Add the given :ref:`NodeThread<class_NodeThread>` to the list of nodes to process. This should happen automatically by the :ref:`NodeThread<class_NodeThread>`

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method_add_process:

.. rst-class:: classref-method

void **add_process** **(** Callable method **)**

Adds the given method to the thread process loop. This method will be called every thread tick.

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method_cancel_scheduled_exec:

.. rst-class:: classref-method

void **cancel_scheduled_exec** **(** :ref:`SharedThread.ScheduledTask<class_SharedThread.ScheduledTask>` task **)**

Cancels a given Sheduled Task before it is executed.

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method_exec:

.. rst-class:: classref-method

void **exec** **(** Callable method **)**

Calls the given method from the thread. Internally, this queues the given method and awaits it to be called during the process loop. You should await this method if your method returns something. E.g. ``var result = await thread_group.exec(myfund.bind("myarg"))``

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method_find_scheduled_exec:

.. rst-class:: classref-method

Array **find_scheduled_exec** **(** Callable method **)**

Finds all SheduledTask's who's method matches the given method.

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method_get_target_frame_time:

.. rst-class:: classref-method

int **get_target_frame_time** **(** **)**

Returns the target frame time in microseconds of the SharedThread

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method_remove_node:

.. rst-class:: classref-method

void **remove_node** **(** :ref:`NodeThread<class_NodeThread>` node, bool stop_on_empty **)**

Remove the given :ref:`NodeThread<class_NodeThread>` from the list of nodes to process. This should happen automatically when the :ref:`NodeThread<class_NodeThread>` exits the scene tree.

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method_remove_process:

.. rst-class:: classref-method

void **remove_process** **(** Callable method **)**

Removes the given method from the thread process loop.

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method_scheduled_exec:

.. rst-class:: classref-method

void **scheduled_exec** **(** Callable method, int wait_time_ms **)**

Calls the given method from the thread after 'wait_time_ms' has passed.

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method_set_priority:

.. rst-class:: classref-method

int **set_priority** **(** int value **)**

Set the given thread niceness to the given value. Note: in order to set negative nice value, this must be run: setcap 'cap_sys_nice=eip' <opengamepadui binary>

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method_start:

.. rst-class:: classref-method

void **start** **(** **)**

Starts the thread for the thread group

.. rst-class:: classref-item-separator

----

.. _class_SharedThread_method_stop:

.. rst-class:: classref-method

void **stop** **(** **)**

Stops the thread for the thread group

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
