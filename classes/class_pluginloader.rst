:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/api/classes/PluginLoader.xml.

.. _class_PluginLoader:

PluginLoader
============

**Inherits:** 

Manage and load plugins

.. rst-class:: classref-introduction-group

Description
-----------

The PluginLoader is responsible for downloading, loading, and initializing OpenGamepadUI plugins. The plugin system for OpenGamepadUI is inspired by the modding system implemented by Delta-V. 



The PluginLoader works by taking advantage of Godot's :ref:`ProjectSettings.load_resource_pack<class_ProjectSettings_method_load_resource_pack>` method, which can allow us to load Godot scripts and scenes from a zip file. The PluginLoader looks for zip files in user://plugins, and parses the plugin.json file contained within them. If the plugin metadata is valid, the loader loads the zip as a resource pack.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`SettingsManager<class_SettingsManager>` | :ref:`SettingsManager<class_PluginLoader_property_SettingsManager>`       |
   +-----------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`Log.Logger<class_Log.Logger>`           | :ref:`logger<class_PluginLoader_property_logger>`                         |
   +-----------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`PluginManager<class_PluginManager>`     | :ref:`parent<class_PluginLoader_property_parent>`                         |
   +-----------------------------------------------+---------------------------------------------------------------------------+
   | Array                                         | :ref:`plugin_filters<class_PluginLoader_property_plugin_filters>`         |
   +-----------------------------------------------+---------------------------------------------------------------------------+
   | Dictionary                                    | :ref:`plugin_nodes<class_PluginLoader_property_plugin_nodes>`             |
   +-----------------------------------------------+---------------------------------------------------------------------------+
   | Dictionary                                    | :ref:`plugin_store_items<class_PluginLoader_property_plugin_store_items>` |
   +-----------------------------------------------+---------------------------------------------------------------------------+
   | Dictionary                                    | :ref:`plugins<class_PluginLoader_property_plugins>`                       |
   +-----------------------------------------------+---------------------------------------------------------------------------+
   | Array                                         | :ref:`plugins_upgradable<class_PluginLoader_property_plugins_upgradable>` |
   +-----------------------------------------------+---------------------------------------------------------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | void                        | :ref:`_init_plugins<class_PluginLoader_method__init_plugins>` **(** Array filters **)**                                          |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | bool                        | :ref:`_is_compatible_version<class_PluginLoader_method__is_compatible_version>` **(** String version, String target **)**        |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | bool                        | :ref:`_is_plugin_new<class_PluginLoader_method__is_plugin_new>` **(** String plugin_id **)**                                     |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | bool                        | :ref:`_is_plugin_upgradable<class_PluginLoader_method__is_plugin_upgradable>` **(** String plugin_id, Dictionary store_db **)**  |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | bool                        | :ref:`_is_valid_plugin_meta<class_PluginLoader_method__is_valid_plugin_meta>` **(** Dictionary meta **)**                        |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | void                        | :ref:`_load_and_init_plugins<class_PluginLoader_method__load_and_init_plugins>` **(** **)**                                      |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | void                        | :ref:`_load_plugin_meta<class_PluginLoader_method__load_plugin_meta>` **(** String path **)**                                    |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | void                        | :ref:`_load_plugins<class_PluginLoader_method__load_plugins>` **(** **)**                                                        |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | void                        | :ref:`_on_install_plugin<class_PluginLoader_method__on_install_plugin>` **(** String _plugin_id, int status **)**                |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | void                        | :ref:`disable_plugin<class_PluginLoader_method_disable_plugin>` **(** String plugin_id **)**                                     |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | void                        | :ref:`enable_plugin<class_PluginLoader_method_enable_plugin>` **(** String plugin_id **)**                                       |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | void                        | :ref:`extract_plugin<class_PluginLoader_method_extract_plugin>` **(** String plugin_id, String path **)**                        |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | Array                       | :ref:`filter_by_tag<class_PluginLoader_method_filter_by_tag>` **(** Dictionary plugins, String tag **)**                         |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | Array                       | :ref:`get_initialized_plugins<class_PluginLoader_method_get_initialized_plugins>` **(** **)**                                    |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | Array                       | :ref:`get_loaded_plugins<class_PluginLoader_method_get_loaded_plugins>` **(** **)**                                              |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Plugin<class_Plugin>` | :ref:`get_plugin<class_PluginLoader_method_get_plugin>` **(** String plugin_id **)**                                             |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | Dictionary                  | :ref:`get_plugin_meta<class_PluginLoader_method_get_plugin_meta>` **(** String plugin_id **)**                                   |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | void                        | :ref:`get_plugin_store_items<class_PluginLoader_method_get_plugin_store_items>` **(** **)**                                      |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | void                        | :ref:`init<class_PluginLoader_method_init>` **(** :ref:`PluginManager<class_PluginManager>` manager **)**                        |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | int                         | :ref:`initialize_plugin<class_PluginLoader_method_initialize_plugin>` **(** Variant plugin_id **)**                              |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | void                        | :ref:`install_plugin<class_PluginLoader_method_install_plugin>` **(** String plugin_id, String download_url, String sha256 **)** |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | bool                        | :ref:`is_extracted<class_PluginLoader_method_is_extracted>` **(** Dictionary meta **)**                                          |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | bool                        | :ref:`is_initialized<class_PluginLoader_method_is_initialized>` **(** String plugin_id **)**                                     |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | bool                        | :ref:`is_installed<class_PluginLoader_method_is_installed>` **(** String plugin_id **)**                                         |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | bool                        | :ref:`is_loaded<class_PluginLoader_method_is_loaded>` **(** String plugin_id **)**                                               |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | bool                        | :ref:`is_upgradable<class_PluginLoader_method_is_upgradable>` **(** String plugin_id **)**                                       |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | void                        | :ref:`on_update_timeout<class_PluginLoader_method_on_update_timeout>` **(** **)**                                                |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | void                        | :ref:`set_plugin_filters<class_PluginLoader_method_set_plugin_filters>` **(** Array filters **)**                                |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | bool                        | :ref:`set_plugin_upgraded<class_PluginLoader_method_set_plugin_upgraded>` **(** String plugin_id **)**                           |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | int                         | :ref:`uninitialize_plugin<class_PluginLoader_method_uninitialize_plugin>` **(** String plugin_id **)**                           |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | int                         | :ref:`uninstall_plugin<class_PluginLoader_method_uninstall_plugin>` **(** String plugin_id **)**                                 |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+
   | int                         | :ref:`unload_plugin<class_PluginLoader_method_unload_plugin>` **(** String plugin_id **)**                                       |
   +-----------------------------+----------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_PluginLoader_signal_plugin_disabled:

.. rst-class:: classref-signal

**plugin_disabled** **(** String name **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_signal_plugin_enabled:

.. rst-class:: classref-signal

**plugin_enabled** **(** String name **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_signal_plugin_initialized:

.. rst-class:: classref-signal

**plugin_initialized** **(** String name **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_signal_plugin_installed:

.. rst-class:: classref-signal

**plugin_installed** **(** String id, int status **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_signal_plugin_loaded:

.. rst-class:: classref-signal

**plugin_loaded** **(** String name **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_signal_plugin_uninitialized:

.. rst-class:: classref-signal

**plugin_uninitialized** **(** String name **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_signal_plugin_uninstalled:

.. rst-class:: classref-signal

**plugin_uninstalled** **(** String id, int status **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_signal_plugin_unloaded:

.. rst-class:: classref-signal

**plugin_unloaded** **(** String name **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_signal_plugin_upgradable:

.. rst-class:: classref-signal

**plugin_upgradable** **(** String name, int update_type **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_signal_plugins_reloaded:

.. rst-class:: classref-signal

**plugins_reloaded** **(** **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_PluginLoader_update_type:

.. rst-class:: classref-enumeration

enum **update_type**:

.. _class_PluginLoader_constant_NEW:

.. rst-class:: classref-enumeration-constant

:ref:`update_type<enum_PluginLoader_update_type>` **NEW** = ``0``



.. _class_PluginLoader_constant_UPDATE:

.. rst-class:: classref-enumeration-constant

:ref:`update_type<enum_PluginLoader_update_type>` **UPDATE** = ``1``



.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Constants
---------

.. _class_PluginLoader_constant_PLUGIN_STORE_URL:

.. rst-class:: classref-constant

**PLUGIN_STORE_URL** = ``https://raw.githubusercontent.com/ShadowBlip/OpenGamepadUI-plugins/main/plugins.json``



.. _class_PluginLoader_constant_PLUGIN_API_VERSION:

.. rst-class:: classref-constant

**PLUGIN_API_VERSION** = ``1.0.0``



.. _class_PluginLoader_constant_PLUGINS_DIR:

.. rst-class:: classref-constant

**PLUGINS_DIR** = ``user://plugins``



.. _class_PluginLoader_constant_LOADED_PLUGINS_DIR:

.. rst-class:: classref-constant

**LOADED_PLUGINS_DIR** = ``res://plugins``



.. _class_PluginLoader_constant_REQUIRED_META:

.. rst-class:: classref-constant

**REQUIRED_META** = ``["plugin.name", "plugin.version", "plugin.min-api-version", "entrypoint"]``



.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_PluginLoader_property_SettingsManager:

.. rst-class:: classref-property

:ref:`SettingsManager<class_SettingsManager>` **SettingsManager**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_property_logger:

.. rst-class:: classref-property

:ref:`Log.Logger<class_Log.Logger>` **logger**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_property_parent:

.. rst-class:: classref-property

:ref:`PluginManager<class_PluginManager>` **parent**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_property_plugin_filters:

.. rst-class:: classref-property

Array **plugin_filters**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_property_plugin_nodes:

.. rst-class:: classref-property

Dictionary **plugin_nodes**

Dictionary of instantiated plugins.

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_property_plugin_store_items:

.. rst-class:: classref-property

Dictionary **plugin_store_items**

Dictionary of available plugins in the defualt plugin store. Similair data struture to the plugins dict with some additonal fields.

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_property_plugins:

.. rst-class:: classref-property

Dictionary **plugins**

Dictionary of installed plugins on the root file system.

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_property_plugins_upgradable:

.. rst-class:: classref-property

Array **plugins_upgradable**

List of plugin_ids that are installed where a newer version of the plugin is available in the plugin store.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_PluginLoader_method__init_plugins:

.. rst-class:: classref-method

void **_init_plugins** **(** Array filters **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method__is_compatible_version:

.. rst-class:: classref-method

bool **_is_compatible_version** **(** String version, String target **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method__is_plugin_new:

.. rst-class:: classref-method

bool **_is_plugin_new** **(** String plugin_id **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method__is_plugin_upgradable:

.. rst-class:: classref-method

bool **_is_plugin_upgradable** **(** String plugin_id, Dictionary store_db **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method__is_valid_plugin_meta:

.. rst-class:: classref-method

bool **_is_valid_plugin_meta** **(** Dictionary meta **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method__load_and_init_plugins:

.. rst-class:: classref-method

void **_load_and_init_plugins** **(** **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method__load_plugin_meta:

.. rst-class:: classref-method

void **_load_plugin_meta** **(** String path **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method__load_plugins:

.. rst-class:: classref-method

void **_load_plugins** **(** **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method__on_install_plugin:

.. rst-class:: classref-method

void **_on_install_plugin** **(** String _plugin_id, int status **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_disable_plugin:

.. rst-class:: classref-method

void **disable_plugin** **(** String plugin_id **)**

Sets the given plugin to disabled

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_enable_plugin:

.. rst-class:: classref-method

void **enable_plugin** **(** String plugin_id **)**

Sets the given plugin to enabled

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_extract_plugin:

.. rst-class:: classref-method

void **extract_plugin** **(** String plugin_id, String path **)**

Extract the given plugin into the plugins directory

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_filter_by_tag:

.. rst-class:: classref-method

Array **filter_by_tag** **(** Dictionary plugins, String tag **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_get_initialized_plugins:

.. rst-class:: classref-method

Array **get_initialized_plugins** **(** **)**

Returns a list of plugin_ids that are initialized and running

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_get_loaded_plugins:

.. rst-class:: classref-method

Array **get_loaded_plugins** **(** **)**

Returns a list of plugin_ids that were loaded

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_get_plugin:

.. rst-class:: classref-method

:ref:`Plugin<class_Plugin>` **get_plugin** **(** String plugin_id **)**

Returns the given plugin instance

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_get_plugin_meta:

.. rst-class:: classref-method

Dictionary **get_plugin_meta** **(** String plugin_id **)**

Returns the metadata for the given plugin

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_get_plugin_store_items:

.. rst-class:: classref-method

void **get_plugin_store_items** **(** **)**

Returns the parsed dictionary of plugin store items. Returns null if there is a failure.

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_init:

.. rst-class:: classref-method

void **init** **(** :ref:`PluginManager<class_PluginManager>` manager **)**

Initializes the plugin loader. Loaded plugins will be added to the given manager node.

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_initialize_plugin:

.. rst-class:: classref-method

int **initialize_plugin** **(** Variant plugin_id **)**

Instances the given plugin and adds it to the scene tree

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_install_plugin:

.. rst-class:: classref-method

void **install_plugin** **(** String plugin_id, String download_url, String sha256 **)**

Downloads and installs the given plugin

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_is_extracted:

.. rst-class:: classref-method

bool **is_extracted** **(** Dictionary meta **)**

Returns whether or not the given plugin is already extracted. This takes the parsed plugin metadata as an argument.

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_is_initialized:

.. rst-class:: classref-method

bool **is_initialized** **(** String plugin_id **)**

Returns true if the given plugin is initialized and running

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_is_installed:

.. rst-class:: classref-method

bool **is_installed** **(** String plugin_id **)**

Returns true if the given plugin is installed.

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_is_loaded:

.. rst-class:: classref-method

bool **is_loaded** **(** String plugin_id **)**

Returns true if the given plugin is loaded.

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_is_upgradable:

.. rst-class:: classref-method

bool **is_upgradable** **(** String plugin_id **)**

Returns true if the given plugin is upgradable.

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_on_update_timeout:

.. rst-class:: classref-method

void **on_update_timeout** **(** **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_set_plugin_filters:

.. rst-class:: classref-method

void **set_plugin_filters** **(** Array filters **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_set_plugin_upgraded:

.. rst-class:: classref-method

bool **set_plugin_upgraded** **(** String plugin_id **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_uninitialize_plugin:

.. rst-class:: classref-method

int **uninitialize_plugin** **(** String plugin_id **)**

Uninitializes a plugin and calls its "unload" method

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_uninstall_plugin:

.. rst-class:: classref-method

int **uninstall_plugin** **(** String plugin_id **)**

Unloads and uninstalls the given plugin. Returns OK if removed successfully.

.. rst-class:: classref-item-separator

----

.. _class_PluginLoader_method_unload_plugin:

.. rst-class:: classref-method

int **unload_plugin** **(** String plugin_id **)**

Unloads the given plugin. Returns OK if successful.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
