:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/api/classes/DBusManager.xml.

.. _class_DBusManager:

DBusManager
===========

**Inherits:** 

DBusManager is a helper class for using DBus

.. rst-class:: classref-introduction-group

Description
-----------

Use this class to interface with DBus.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------------------------------------------------------+----------------------------------------------------------------------+-------+
   | :ref:`BUS_TYPE<enum_DBusManager_BUS_TYPE>`                | :ref:`bus_type<class_DBusManager_property_bus_type>`                 | ``1`` |
   +-----------------------------------------------------------+----------------------------------------------------------------------+-------+
   | DBus                                                      | :ref:`dbus<class_DBusManager_property_dbus>`                         |       |
   +-----------------------------------------------------------+----------------------------------------------------------------------+-------+
   | :ref:`DBusManager.DBusProxy<class_DBusManager.DBusProxy>` | :ref:`dbus_proxy<class_DBusManager_property_dbus_proxy>`             |       |
   +-----------------------------------------------------------+----------------------------------------------------------------------+-------+
   | :ref:`Log.Logger<class_Log.Logger>`                       | :ref:`logger<class_DBusManager_property_logger>`                     |       |
   +-----------------------------------------------------------+----------------------------------------------------------------------+-------+
   | :ref:`SharedThread<class_SharedThread>`                   | :ref:`thread<class_DBusManager_property_thread>`                     |       |
   +-----------------------------------------------------------+----------------------------------------------------------------------+-------+
   | Array                                                     | :ref:`well_known_names<class_DBusManager_property_well_known_names>` |       |
   +-----------------------------------------------------------+----------------------------------------------------------------------+-------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +---------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
   | void                                              | :ref:`_init<class_DBusManager_method__init>` **(** **)**                                                     |
   +---------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
   | void                                              | :ref:`_process<class_DBusManager_method__process>` **(** float _delta **)**                                  |
   +---------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
   | void                                              | :ref:`_process_message<class_DBusManager_method__process_message>` **(** DBusMessage msg **)**               |
   +---------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
   | bool                                              | :ref:`bus_exists<class_DBusManager_method_bus_exists>` **(** String name **)**                               |
   +---------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
   | :ref:`DBusManager.Proxy<class_DBusManager.Proxy>` | :ref:`create_proxy<class_DBusManager_method_create_proxy>` **(** String bus, String path **)**               |
   +---------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
   | Array                                             | :ref:`get_managed_objects<class_DBusManager_method_get_managed_objects>` **(** String bus, String path **)** |
   +---------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
   | PackedStringArray                                 | :ref:`get_names_for_owner<class_DBusManager_method_get_names_for_owner>` **(** String owner **)**            |
   +---------------------------------------------------+--------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Enumerations
------------

.. _enum_DBusManager_BUS_TYPE:

.. rst-class:: classref-enumeration

enum **BUS_TYPE**:

.. _class_DBusManager_constant_SYSTEM:

.. rst-class:: classref-enumeration-constant

:ref:`BUS_TYPE<enum_DBusManager_BUS_TYPE>` **SYSTEM** = ``1``



.. _class_DBusManager_constant_SESSION:

.. rst-class:: classref-enumeration-constant

:ref:`BUS_TYPE<enum_DBusManager_BUS_TYPE>` **SESSION** = ``0``



.. _class_DBusManager_constant_STARTER:

.. rst-class:: classref-enumeration-constant

:ref:`BUS_TYPE<enum_DBusManager_BUS_TYPE>` **STARTER** = ``2``



.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Constants
---------

.. _class_DBusManager_constant_DBUS_BUS:

.. rst-class:: classref-constant

**DBUS_BUS** = ``org.freedesktop.DBus``



.. _class_DBusManager_constant_DBUS_PATH:

.. rst-class:: classref-constant

**DBUS_PATH** = ``/org/freedesktop/DBus``



.. _class_DBusManager_constant_IFACE_DBUS:

.. rst-class:: classref-constant

**IFACE_DBUS** = ``org.freedesktop.DBus``



.. _class_DBusManager_constant_IFACE_PROPERTIES:

.. rst-class:: classref-constant

**IFACE_PROPERTIES** = ``org.freedesktop.DBus.Properties``



.. _class_DBusManager_constant_IFACE_OBJECT_MANAGER:

.. rst-class:: classref-constant

**IFACE_OBJECT_MANAGER** = ``org.freedesktop.DBus.ObjectManager``



.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_DBusManager_property_bus_type:

.. rst-class:: classref-property

:ref:`BUS_TYPE<enum_DBusManager_BUS_TYPE>` **bus_type** = ``1``

Type of bus to connect to

.. rst-class:: classref-item-separator

----

.. _class_DBusManager_property_dbus:

.. rst-class:: classref-property

DBus **dbus**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_DBusManager_property_dbus_proxy:

.. rst-class:: classref-property

:ref:`DBusManager.DBusProxy<class_DBusManager.DBusProxy>` **dbus_proxy**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_DBusManager_property_logger:

.. rst-class:: classref-property

:ref:`Log.Logger<class_Log.Logger>` **logger**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_DBusManager_property_thread:

.. rst-class:: classref-property

:ref:`SharedThread<class_SharedThread>` **thread**

Shared thread to process DBus messages on

.. rst-class:: classref-item-separator

----

.. _class_DBusManager_property_well_known_names:

.. rst-class:: classref-property

Array **well_known_names**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_DBusManager_method__init:

.. rst-class:: classref-method

void **_init** **(** **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_DBusManager_method__process:

.. rst-class:: classref-method

void **_process** **(** float _delta **)**

Process messages on the bus that are being watched and dispatch them.

.. rst-class:: classref-item-separator

----

.. _class_DBusManager_method__process_message:

.. rst-class:: classref-method

void **_process_message** **(** DBusMessage msg **)**

Dispatch the given message to any proxy objects

.. rst-class:: classref-item-separator

----

.. _class_DBusManager_method_bus_exists:

.. rst-class:: classref-method

bool **bus_exists** **(** String name **)**

Returns true if the given well-known name has an owner.

.. rst-class:: classref-item-separator

----

.. _class_DBusManager_method_create_proxy:

.. rst-class:: classref-method

:ref:`DBusManager.Proxy<class_DBusManager.Proxy>` **create_proxy** **(** String bus, String path **)**

Creates a reference to a DBus object on the given bus at the given path. E.g. create_proxy("org.bluez", "/org/bluez/hci0")

.. rst-class:: classref-item-separator

----

.. _class_DBusManager_method_get_managed_objects:

.. rst-class:: classref-method

Array **get_managed_objects** **(** String bus, String path **)**

Returns a dictionary of manages objects for the given bus and path

.. rst-class:: classref-item-separator

----

.. _class_DBusManager_method_get_names_for_owner:

.. rst-class:: classref-method

PackedStringArray **get_names_for_owner** **(** String owner **)**

Tries to resolve well-known names (e.g. "org.bluez") from the given owner (e.g. ":1.5"). This will return an array of well-known names.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
