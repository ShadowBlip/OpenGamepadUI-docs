:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/api/classes/GamepadManager.xml.

.. _class_GamepadManager:

GamepadManager
==============

**Inherits:** 

Manages virtual controllers

.. rst-class:: classref-introduction-group

Description
-----------

The **GamepadManager** discovers gamepads and interepts their input so OpenGamepadUI can control what inputs should get passed on to the game and what only OpenGamepadUI should process. This works by grabbing exclusive access to the physical gamepads and creating a virtual gamepad that games can see. SteamInput does this differently. It instead sets the 'SDL_GAMECONTROLLER_IGNORE_DEVICES' environment variable whenever it launches a game to make the game ignore all physical gamepads EXCEPT for Steam virtual gamepads. https://github.com/godotengine/godot/pull/76045

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------------------------------------------------------------------+-----------------------------------------------------------------------+--------------------------------------------------+
   | String                                                                | :ref:`default_profile<class_GamepadManager_property_default_profile>` | ``"res://assets/gamepad/profiles/default.tres"`` |
   +-----------------------------------------------------------------------+-----------------------------------------------------------------------+--------------------------------------------------+
   | :ref:`DeviceHider<class_DeviceHider>`                                 | :ref:`device_hider<class_GamepadManager_property_device_hider>`       |                                                  |
   +-----------------------------------------------------------------------+-----------------------------------------------------------------------+--------------------------------------------------+
   | :ref:`GamepadManager.GamepadArray<class_GamepadManager.GamepadArray>` | :ref:`gamepads<class_GamepadManager_property_gamepads>`               |                                                  |
   +-----------------------------------------------------------------------+-----------------------------------------------------------------------+--------------------------------------------------+
   | :ref:`SharedThread<class_SharedThread>`                               | :ref:`input_thread<class_GamepadManager_property_input_thread>`       |                                                  |
   +-----------------------------------------------------------------------+-----------------------------------------------------------------------+--------------------------------------------------+
   | :ref:`Log.Logger<class_Log.Logger>`                                   | :ref:`logger<class_GamepadManager_property_logger>`                   |                                                  |
   +-----------------------------------------------------------------------+-----------------------------------------------------------------------+--------------------------------------------------+
   | :ref:`Platform<class_Platform>`                                       | :ref:`platform<class_GamepadManager_property_platform>`               |                                                  |
   +-----------------------------------------------------------------------+-----------------------------------------------------------------------+--------------------------------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | String            | :ref:`_get_event_from_phys<class_GamepadManager_method__get_event_from_phys>` **(** String phys_path **)**                                                 |
   +-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void              | :ref:`_init<class_GamepadManager_method__init>` **(** **)**                                                                                                |
   +-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void              | :ref:`_on_gamepad_change<class_GamepadManager_method__on_gamepad_change>` **(** int device, bool connected **)**                                           |
   +-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void              | :ref:`_process_input<class_GamepadManager_method__process_input>` **(** float _delta **)**                                                                 |
   +-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | Array             | :ref:`discover_devices<class_GamepadManager_method_discover_devices>` **(** **)**                                                                          |
   +-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | PackedStringArray | :ref:`discover_gamepad_paths<class_GamepadManager_method_discover_gamepad_paths>` **(** **)**                                                              |
   +-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void              | :ref:`exit<class_GamepadManager_method_exit>` **(** **)**                                                                                                  |
   +-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | Array             | :ref:`get_gamepad_capabilities<class_GamepadManager_method_get_gamepad_capabilities>` **(** String device **)**                                            |
   +-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | Array             | :ref:`get_gamepad_paths<class_GamepadManager_method_get_gamepad_paths>` **(** **)**                                                                        |
   +-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void              | :ref:`set_gamepad_profile<class_GamepadManager_method_set_gamepad_profile>` **(** String device, :ref:`GamepadProfile<class_GamepadProfile>` profile **)** |
   +-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void              | :ref:`set_gamepads_profile<class_GamepadManager_method_set_gamepads_profile>` **(** :ref:`GamepadProfile<class_GamepadProfile>` profile **)**              |
   +-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void              | :ref:`set_intercept<class_GamepadManager_method_set_intercept>` **(** :ref:`INTERCEPT_MODE<enum_ManagedGamepad_INTERCEPT_MODE>` mode **)**                 |
   +-------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_GamepadManager_signal_gamepad_added:

.. rst-class:: classref-signal

**gamepad_added** **(** :ref:`ManagedGamepad<class_ManagedGamepad>` gamepad **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_signal_gamepad_removed:

.. rst-class:: classref-signal

**gamepad_removed** **(** **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_signal_gamepads_changed:

.. rst-class:: classref-signal

**gamepads_changed** **(** **)**

.. container:: contribute

	There is currently no description for this signal. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_GamepadManager_property_default_profile:

.. rst-class:: classref-property

String **default_profile** = ``"res://assets/gamepad/profiles/default.tres"``

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_property_device_hider:

.. rst-class:: classref-property

:ref:`DeviceHider<class_DeviceHider>` **device_hider**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_property_gamepads:

.. rst-class:: classref-property

:ref:`GamepadManager.GamepadArray<class_GamepadManager.GamepadArray>` **gamepads**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_property_input_thread:

.. rst-class:: classref-property

:ref:`SharedThread<class_SharedThread>` **input_thread**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_property_logger:

.. rst-class:: classref-property

:ref:`Log.Logger<class_Log.Logger>` **logger**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_property_platform:

.. rst-class:: classref-property

:ref:`Platform<class_Platform>` **platform**

.. container:: contribute

	There is currently no description for this property. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_GamepadManager_method__get_event_from_phys:

.. rst-class:: classref-method

String **_get_event_from_phys** **(** String phys_path **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_method__init:

.. rst-class:: classref-method

void **_init** **(** **)**

Initializes the gamepad manager and starts the gamepad interecpt thread.

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_method__on_gamepad_change:

.. rst-class:: classref-method

void **_on_gamepad_change** **(** int device, bool connected **)**

Triggers whenever we detect any gamepad connect/disconnect events

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_method__process_input:

.. rst-class:: classref-method

void **_process_input** **(** float _delta **)**

Runs evdev input processing in its own thread. We use mutexes to safely access variables from the main thread

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_method_discover_devices:

.. rst-class:: classref-method

Array **discover_devices** **(** **)**

Returns an array of input devices discovered under '/dev/input'

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_method_discover_gamepad_paths:

.. rst-class:: classref-method

PackedStringArray **discover_gamepad_paths** **(** **)**

Returns an array of discovered gamepad device paths. E.g. ``"/dev/input/event1", "/dev/input/event2"``

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_method_exit:

.. rst-class:: classref-method

void **exit** **(** **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_method_get_gamepad_capabilities:

.. rst-class:: classref-method

Array **get_gamepad_capabilities** **(** String device **)**

Returns a list of all supported output events provided by the given gamepad.

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_method_get_gamepad_paths:

.. rst-class:: classref-method

Array **get_gamepad_paths** **(** **)**

Returns a list of gamepad devices that are being exclusively managed.

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_method_set_gamepad_profile:

.. rst-class:: classref-method

void **set_gamepad_profile** **(** String device, :ref:`GamepadProfile<class_GamepadProfile>` profile **)**

Sets the given gamepad profile on the given managed gamepad. E.g. set_gamepad_profile("/dev/input/event1", profile)

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_method_set_gamepads_profile:

.. rst-class:: classref-method

void **set_gamepads_profile** **(** :ref:`GamepadProfile<class_GamepadProfile>` profile **)**

Sets the given gamepad profile on ALL managed gamepads

.. rst-class:: classref-item-separator

----

.. _class_GamepadManager_method_set_intercept:

.. rst-class:: classref-method

void **set_intercept** **(** :ref:`INTERCEPT_MODE<enum_ManagedGamepad_INTERCEPT_MODE>` mode **)**

Sets the gamepad intercept mode

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
